* 概述
  此文的内容主要来自<<Programming in Scala>>2nd, 我把学习中觉得一些特别的或者需要注意的语法, 或者特性以问答的方式写下来.

* 何时可以省略方法调用的'.'和'()'? (P/83)
for (i <- 0 to 2) {
print(i)
}
规则:
a) 方法只能有一个参数;
b) 定义方法调用的接受者.

* scala有操作符吗? P/83 通用的规则apply/update
操作符重载的概念
scala没有操作符的语法要素, 所谓的+, -, *等其实是对象的方法.scala追求纯粹的面向对象特性.
比如1 + 2, 其实是(1).+(2)
说明白了这个问题, 进一步解释下scala的数组为啥使用()调用元素， 而不是[]
arrayObj(i)实质也是个方法调用, 等价于arrayObj.apply(i)
总结: 本质上scala希望在语言层设计上追求纯粹的一致的OO思想, 所以在理解scala的代码时, 需要明白一个道理: 代码外在的"奇怪"形式, 其实是在一定规则下简略的面向对象语法特性, 在解释器/编译器处理代码时, 这些形式有其对应的面向对象调用形式.

* Array的操作疑问?

* 什么是函数式编程
1) 函数没有副作用

* 关于作用方向? P/87

